import React, { useState, useEffect, createElement } from "react";

function Word({ selectedDifficulty, word }) {
  const easyWords = [
    "the",
    "be",
    "to",
    "of",
    "and",
    "a",
    "in",
    "that",
    "have",
    "I",
    "it",
    "for",
    "not",
    "on",
    "with",
    "he",
    "as",
    "you",
    "do",
    "at",
    "this",
    "but",
    "his",
    "by",
    "from",
    "they",
    "we",
    "say",
    "her",
    "she",
    "or",
    "an",
    "will",
    "my",
    "one",
    "all",
    "would",
    "there",
    "their",
    "what",
    "so",
    "up",
    "out",
    "if",
    "about",
    "who",
    "get",
    "which",
    "go",
    "me",
    "when",
    "make",
    "can",
    "like",
    "time",
    "no",
    "just",
    "him",
    "know",
    "take",
    "people",
    "into",
    "year",
    "your",
    "good",
    "some",
    "could",
    "them",
    "see",
    "other",
    "than",
    "then",
    "now",
    "look",
    "only",
    "come",
    "its",
    "over",
    "think",
    "also",
    "back",
    "after",
    "use",
    "two",
    "how",
    "our",
    "work",
    "first",
    "well",
    "way",
    "even",
    "new",
    "want",
    "because",
    "any",
    "these",
    "give",
    "day",
    "most",
    "us",
    "is",
    "are",
    "am",
    "was",
    "were",
    "been",
    "has",
    "had",
    "did",
    "does",
    "each",
    "many",
    "much",
    "more",
    "too",
    "very",
    "again",
    "same",
    "different",
    "off",
    "another",
    "one",
    "two",
    "three",
    "four",
    "five",
    "first",
    "second",
    "third",
    "both",
    "few",
    "some",
    "all",
    "no",
    "none",
    "who",
    "what",
    "when",
    "where",
    "why",
    "how",
    "the",
    "a",
    "an",
    "of",
    "on",
    "in",
    "with",
    "as",
    "for",
    "by",
    "to",
    "through",
    "over",
    "under",
    "between",
    "among",
    "behind",
    "after",
    "before",
    "above",
    "below",
    "with",
    "which",
    "that",
    "those",
    "this",
    "these",
    "there",
    "here",
    "now",
    "then",
    "and",
    "but",
    "or",
    "yet",
    "so",
    "if",
    "because",
    "while",
    "although",
    "since",
    "until",
    "unless",
    "whether",
    "before",
    "after",
    "about",
    "into",
    "over",
    "through",
    "between",
    "under",
    "above",
    "around",
    "near",
    "below",
    "after",
    "above",
    "before",
    "against",
  ];

  // const normalWords = ["bruh", "error"];
  const normalWords = [
    "the",
    "be",
    "to",
    "of",
    "and",
    "a",
    "in",
    "that",
    "have",
    "I",
    "it",
    "for",
    "not",
    "on",
    "with",
    "he",
    "as",
    "you",
    "do",
    "at",
    "this",
    "but",
    "his",
    "by",
    "from",
    "they",
    "we",
    "say",
    "her",
    "she",
    "or",
    "an",
    "will",
    "my",
    "one",
    "all",
    "would",
    "there",
    "their",
    "what",
    "so",
    "up",
    "out",
    "if",
    "about",
    "who",
    "get",
    "which",
    "go",
    "me",
    "when",
    "make",
    "can",
    "like",
    "time",
    "no",
    "just",
    "him",
    "know",
    "take",
    "people",
    "into",
    "year",
    "your",
    "good",
    "some",
    "could",
    "them",
    "see",
    "other",
    "than",
    "then",
    "now",
    "look",
    "only",
    "come",
    "its",
    "over",
    "think",
    "also",
    "back",
    "after",
    "use",
    "two",
    "how",
    "our",
    "work",
    "first",
    "well",
    "way",
    "even",
    "new",
    "want",
    "because",
    "any",
    "these",
    "give",
    "day",
    "most",
    "us",
    "is",
    "are",
    "am",
    "was",
    "were",
    "been",
    "has",
    "had",
    "did",
    "does",
    "were",
    "been",
    "has",
    "had",
    "did",
    "does",
    "each",
    "many",
    "much",
    "more",
    "too",
    "very",
    "again",
    "same",
    "different",
    "off",
    "another",
    "one",
    "two",
    "three",
    "four",
    "five",
    "first",
    "second",
    "third",
    "both",
    "few",
    "more",
    "some",
    "all",
    "no",
    "none",
    "who",
    "what",
    "when",
    "where",
    "why",
    "how",
    "the",
    "a",
    "an",
    "of",
    "on",
    "in",
    "with",
    "as",
    "for",
    "by",
    "to",
    "through",
    "over",
    "under",
    "between",
    "among",
    "behind",
    "after",
    "before",
    "above",
    "below",
    "with",
    "which",
    "that",
    "those",
    "this",
    "these",
    "there",
    "here",
    "now",
    "then",
    "and",
    "but",
    "or",
    "yet",
    "so",
    "if",
    "because",
    "while",
    "although",
    "since",
    "until",
    "unless",
    "whether",
    "before",
    "after",
    "about",
    "into",
    "over",
    "through",
    "between",
    "under",
    "above",
    "around",
    "near",
    "between",
    "behind",
    "below",
    "after",
    "above",
    "before",
    "against",
  ];

  const hardWords = [
    "abruptly",
    "absurd",
    "abyss",
    "affix",
    "askew",
    "avenue",
    "awkward",
    "axiom",
    "azure",
    "bagpipes",
    "bandwagon",
    "banjo",
    "beekeeper",
    "bikini",
    "blitz",
    "blizzard",
    "boggle",
    "bookworm",
    "boxcar",
    "boxful",
    "buckaroo",
    "buffalo",
    "buffoon",
    "buxom",
    "buzzard",
    "buzzing",
    "buzzwords",
    "caliph",
    "cobweb",
    "cockiness",
    "croquet",
    "crypt",
    "curacao",
    "cycle",
    "daiquiri",
    "dirndl",
    "disavow",
    "dizzying",
    "duplex",
    "dwarves",
    "embezzle",
    "equip",
    "espionage",
    "euouae",
    "exodus",
    "faking",
    "fishhook",
    "fixable",
    "fjord",
    "flapjack",
    "flopping",
    "fluffiness",
    "flyby",
    "foxglove",
    "frazzled",
    "frizzled",
    "fuchsia",
    "funny",
    "gabby",
    "galaxy",
    "galvanize",
    "gazebo",
    "giaour",
    "gizmo",
    "glowworm",
    "glyph",
    "gnarly",
    "gossip",
    "grogginess",
    "haiku",
    "haphazard",
    "hyphen",
    "iatrogenic",
    "icebox",
    "injury",
    "ivory",
    "ivy",
    "jackpot",
    "jaundice",
    "jawbreaker",
    "jaywalk",
    "jazziest",
    "jazzy",
    "jelly",
    "jigsaw",
    "jinx",
    "jiujitsu",
    "jockey",
    "jogging",
    "joking",
    "jovial",
    "joyful",
    "juicy",
    "jukebox",
    "jumbo",
    "kayak",
    "kazoo",
    "keyhole",
    "khaki",
    "kilobyte",
    "kiosk",
    "knapsack",
    "larynx",
    "lengths",
    "lucky",
    "luxury",
    "lymph",
    "marquis",
    "memento",
    "mystify",
    "naphtha",
    "nightclub",
    "nowadays",
    "numbskull",
    "ostracize",
    "oxygen",
    "pajamas",
    "peekaboo",
    "phlegm",
    "pixel",
    "pizazz",
    "pneumonia",
    "polka",
    "pshaw",
    "psyche",
    "puppy",
    "quartz",
    "queue",
    "quips",
    "quixotic",
    "quiz",
    "quizzes",
    "rhubarb",
    "rhythm",
    "rickshaw",
    "schnapps",
    "scratch",
    "shiv",
    "snazzy",
    "sphinx",
    "spritz",
    "squawk",
    "staff",
    "strength",
    "strengths",
    "stretch",
    "stronghold",
    "stymied",
    "subway",
    "swivel",
    "syndrome",
    "thriftless",
    "thumbscrew",
    "topaz",
    "transcript",
    "transgress",
    "transplant",
    "triphthong",
    "twelfth",
    "twelfths",
    "unknown",
    "unworthy",
    "unzip",
    "uptown",
    "vaporize",
    "vixen",
    "vodka",
    "voodoo",
    "vortex",
    "voyeurism",
    "walkway",
    "waltz",
    "wave",
    "wavy",
    "waxy",
    "wellspring",
    "wheezy",
    "whiskey",
    "whizzing",
    "whomever",
    "wimpy",
    "witchcraft",
    "wizard",
    "woozy",
    "wristwatch",
    "wyvern",
    "xylophone",
    "yachtsman",
    "yippee",
    "yoked",
    "youthful",
    "yummy",
    "jovial",
    "quizzed",
    "pizzazz",
    "joyful",
    "quintuple",
    "whizzing",
    "although",
    "because",
    "beyond",
    "between",
    "change",
    "children",
    "country",
    "different",
    "during",
    "example",
    "friends",
    "however",
    "important",
    "information",
    "language",
    "little",
    "people",
    "problem",
    "question",
    "several",
    "should",
    "something",
    "sometimes",
    "student",
    "teacher",
    "thought",
    "through",
    "together",
    "understand",
    "without",
  ];

  const [randomWord, setRandomWord] = useState("");

  useEffect(() => {
    let selectedDifficultyArray = [];

    if (word) {
      setRandomWord(word);
    } else {
      if (selectedDifficulty == "easy") {
        selectedDifficultyArray = easyWords;
      } else if (selectedDifficulty == "normal") {
        selectedDifficultyArray = normalWords;
      } else if (selectedDifficulty == "hard") {
        selectedDifficultyArray = hardWords;
      }

      let randomIndex = Math.floor(
        Math.random() * selectedDifficultyArray.length
      );
      let randomWordFromArray = selectedDifficultyArray[randomIndex];
      setRandomWord(randomWordFromArray);
    }
  }, [selectedDifficulty, word]);

  let map = randomWord
    .split("")
    .map((item, index) =>
      createElement("div", { key: index, className: "letter" }, item)
    );
  map.push(
    createElement("div", { key: "space", className: "letter space" }, " ")
  );

  return map;
}

export default Word;
